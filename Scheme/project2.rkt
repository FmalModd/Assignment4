;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-lambda-reader.ss" "lang")((modname project2) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ())))
; 1. a)
(define(maxElement lis)
  (if(null? (cdr lis)) (car lis)
     (max (car lis) (maxElement(cdr lis)))))
; 1. b)
(define(elementAtIndex lis n)
  (if(= n 1) (car lis)
     (elementAtIndex (cdr lis) (- n 1))))
; 1. c)
(define(compress lis)
  (cond ((null? lis) '()) 
        ((null? (cdr lis)) (cons (car lis) '()))
        ((equal? (car lis) (car (cdr lis))) (compress(cdr lis)))
        (else (cons (car lis) (compress(cdr lis))))))
; 1. d)
(define(maxofmax lis)
  (maxElement(map maxElement lis)))  
; 1. e)
(define(split lis n)
  (list (prefix_help lis n) (postfix_help lis n)))
(define(prefix_help lis n)
  (cond((null? lis) '())
       ((= n 0) '())
       (else (cons (car lis) (prefix_help (cdr lis) (- n 1))))))
(define(postfix_help lis n)
  (cond((null? lis) '())
       ((= n 0) lis) 
       (else (postfix_help (cdr lis) (- n 1)))))
; 2. a)
(define(sumList lis)
  (if(null? lis) 0
     (+ (car lis) (sumList(cdr lis)))))
; 2. b)
(define (charCount sym) (string-length (symbol->string sym)))
(define(charactersPerWord lis)
  (map charCount lis))
; 2. c)
(define(charactersPerSentence lis)
  (map sumList (map charactersPerWord lis)))
; 2. d)
(define(wordsPerSentence lis)
  (map length lis))
; 2. e)
(define(statsDocument lis)
  (cons (sumList (charactersPerSentence lis)) (cons (sumList (wordsPerSentence lis)) (cons (length lis) '()))))
; Test cases:
; 1. a)
(maxElement '(5 3 7 2 6 1 4))
; 1. b)
(elementAtIndex '(a b c d e f) 4)
; 1. c)
(compress '(a a a b b c c c d d d d e f f))
; 1. d)
(maxofmax '((5 3 6 2) (1 6 2 7) (7 3 8 2 9) (6 2 4 1)))
; 1. e)
(split '(a b c d e f g) 3)
; 2. a)
(sumList ' (5 4 3))
; 2. b)
(charactersPerWord ' (Scheme is so wonderful))
; 2. c)
(charactersPerSentence '((Hello Mary) (Scheme is so wonderful) (See you later) (John)))
; 2. d)
(wordsPerSentence '((Hello Mary) (Scheme is so wonderful) (See you later) (John)))
; 2. e)
(statsDocument '((Hello Mary) (Scheme is so wonderful) (See you later) (John)))